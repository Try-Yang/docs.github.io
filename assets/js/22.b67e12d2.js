(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{383:function(e,t,s){"use strict";s.r(t);var a=s(43),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",{attrs:{id:"git-rebase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase"}},[e._v("#")]),e._v(" Git Rebase")]),e._v(" "),s("p",[e._v("再上一章的git 回退中已经使用过 rebase功能，那么rebase到底是什么呢？")]),e._v(" "),s("p",[s("a",{attrs:{href:"https://www.atlassian.com/git/tutorials/rewriting-history/git-rebase",target:"_blank",rel:"noopener noreferrer"}},[e._v("来看一看官方的说法"),s("OutboundLink")],1)]),e._v(" "),s("p",[e._v("翻译一下就是：变基操作试讲一些列的提交也就是我们的commits链 移动到新的commit的过程。一般在使用功能分支开发模式中，它是非常有效的。变基将分支的基础 从一次提交更改为 领一次提交，而不用像 merge操作那样，出现交叉点的问题，使得我们的功能分支看起来就是一个单独的分叉。")]),e._v(" "),s("p",[s("img",{attrs:{src:"https://wac-cdn.atlassian.com/dam/jcr:e4a40899-636b-4988-9774-eaa8a440575b/02.svg?cdnVersion=1084",alt:""}})]),e._v(" "),s("p",[e._v("简单分析一下上边的 模式我们再功能分支上开发了两个 commit，此时 我们再")]),e._v(" "),s("p",[e._v("Feature分支上执行")]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" rebase master "),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 什么意思呢")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("上面的shell的意思是，以master分支的最新的 提交点 为基础点，重新设置 Feature的基础点，因为默认情况下可以理解Feature的基础点是 交叉分支。")]),e._v(" "),s("p",[e._v("重设基础点为 master分支后，其实就会发现，我们当前的 功能分支 和master分支其实不存在什么分叉，而使 commit领先于master的模式，这时候，我们切换为主分支,再主分支上执行一下 合并操作，将功能分支的代码合并过来即可")]),e._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout master\n"),s("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" merge branch\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[e._v("注意一点，再rebase的过程中，因为更换了基点，也就相当于重新以新基点为准重新提交了以此，可能会产生冲突，这时候解决完冲突后，执行"),s("code",[e._v("git rebase --continue")]),e._v(" 然后切换分支重新执行即可")]),e._v(" "),s("p",[e._v("虽然rebase的有点很多，比如说再分支合并上可以保证无交叉，但是这一般只有在当前 分支只有自己一个人开发的情况下才可以，因为 rebase 导致了重新变基，如果有其它人使用的话，那么他人本地分支再pull的时候可能导致 commit丢失产生冲突，所以还是要谨慎使用，")])])}),[],!1,null,null,null);t.default=r.exports}}]);